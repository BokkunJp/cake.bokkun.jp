name: CI

on:
  push:
    branches:
      - '4.x'
      - '4.next'
      - '5.x'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  # testsuite:
  #   runs-on: ubuntu-22.04
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       php-version: ['8.3']
  #       dependencies: ['highest']
  #       include:
  #         - php-version: '8.3'
  #           dependencies: 'lowest'

  #   services:
  #     mysql:
  #       image: mysql:8.0
  #       env:
  #         MYSQL_ROOT_PASSWORD: cake_project
  #         MYSQL_DATABASE: cake_project
  #       ports:
  #         - 3306:3306
  #       options: >-
  #         --health-cmd="mysqladmin ping --silent"
  #         --health-interval=10s
  #         --health-timeout=5s
  #         --health-retries=3
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Setup PHP
  #     uses: shivammathur/setup-php@v2
  #     with:
  #       php-version: ${{ matrix.php-version }}
  #       extensions: mbstring, intl, pdo_sqlite, pdo_mysql, pdo_pgsql
  #       ini-values: zend.assertions=1
  #       coverage: none

  #   - name: Composer install
  #     uses: ramsey/composer-install@v2
  #     with:
  #       dependency-versions: ${{ matrix.dependencies }}
  #       composer-options: ""

  #   - name: Composer post install
  #     run: composer run-script post-install-cmd --no-interaction

  #   - name: Run PHPUnit
  #     run: vendor/bin/phpunit

  coding-standard:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: mbstring, intl
        coverage: none
        tools: cs2pr, phpstan:1.10

    - name: Composer install
      uses: ramsey/composer-install@v2

    - name: Run PHP CodeSniffer
      run: vendor/bin/phpcs --report=checkstyle | cs2pr

    - name: Run phpstan
      if: always()
      run: vendor/bin/phpstan analyse
